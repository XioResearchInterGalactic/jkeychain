<?xml version="1.0" ?>
<project name="osxkeychain" default="jar" basedir=".">
    <target name="build" depends="build-c,build-java">
    </target>
    <target name="build-dest">
        <mkdir dir="lib"/>
    </target>
    <target name="build-java" depends="build-dest,codegen">
        <javac destdir="lib" includeantruntime="false" debug="true">
            <src path="src/java"/>
        </javac>
    </target>
    <target name="build-javah" depends="build-java">
        <javah destdir="src/c" classpath="lib">
            <class name="pt.davidafsilva.apple.OSXKeychain"/>
        </javah>
    </target>
    <target name="build-c" depends="build-dest,build-javah">
        <exec executable="gcc" dir="src/c">
            <arg value="-arch"/>
            <arg value="i386"/>
            <arg value="-arch"/>
            <arg value="x86_64"/>
            <arg value="-mmacosx-version-min=10.5"/>
            <arg value="-dynamiclib"/>
            <arg value="-framework"/>
            <arg value="CoreFoundation"/>
            <arg value="-framework"/>
            <arg value="JavaVM"/>
            <arg value="-framework"/>
            <arg value="Security"/>
            <arg value="-I"/>
            <arg value="/System/Library/Frameworks/JavaVM.framework/Versions/Current/Headers"/>
            <arg value="-std=c99"/>
            <arg value="-pedantic"/>
            <arg value="-Wall"/>
            <arg value="-o"/>
            <arg value="${basedir}/lib/osxkeychain.so"/>
            <arg value="pt_davidafsilva_apple_OSXKeychain.c"/>
        </exec>
    </target>

    <target name="codegen" depends="codegen-generate_enums">
    </target>
    <target name="codegen-generate_enums" depends="codegen-generate_enums-build">
        <exec executable="lib/generate_enums">
            <arg value="src/java/pt/davidafsilva/apple/OSXKeychainAuthenticationType.java"/>
            <arg value="src/java/pt/davidafsilva/apple/OSXKeychainProtocolType.java"/>
        </exec>
    </target>
    <target name="codegen-generate_enums-build">
        <exec executable="gcc" dir="src/c/">
            <arg value="-arch"/>
            <arg value="i386"/>
            <arg value="-arch"/>
            <arg value="x86_64"/>
            <arg value="-mmacosx-version-min=10.5"/>
            <arg value="-framework"/>
            <arg value="Security"/>
            <arg value="-std=c99"/>
            <arg value="-pedantic"/>
            <arg value="-Wall"/>
            <arg value="-o"/>
            <arg value="../../lib/generate_enums"/>
            <arg value="generate_enums.c"/>
        </exec>
    </target>

    <target name="jar" depends="build">
        <mkdir dir="lib"/>
        <jar destfile="lib/osxkeychain-0.0.1.jar">
            <fileset dir="lib/" includes="pt/**,osxkeychain.so"/>
        </jar>
    </target>

    <target name="dist" depends="jar,doc">
        <zip destfile="dist/osxkeychain.zip">
            <zipfileset dir="." includes="README.md" prefix="osxkeychain"/>
            <zipfileset dir="dist" includes="osxkeychain.jar" prefix="osxkeychain"/>
            <zipfileset dir="doc" prefix="osxkeychain/doc"/>
        </zip>
    </target>

    <target name="clean">
        <delete dir="doc"/>
        <delete dir="lib"/>
        <delete file="src/c/pt_davidafsilva_osx_OSXKeychain.h"/>
        <delete file="src/java/pt/davidafsilva/apple/OSXKeychainAuthenticationType.java"/>
        <delete file="src/java/pt/davidafsilva/apple/OSXKeychainProtocolType.java"/>
        <delete file="test/c/fakejni.o"/>
        <delete file="test/c/test"/>
    </target>

    <!--
        TEST
    -->

    <target name="test" depends="test-c,test-java">
    </target>
    <target name="test-c" depends="test-c-build">
        <exec executable="${basedir}/test/c/test" failonerror="true">
        </exec>
    </target>
    <target name="test-c-build" depends="test-c-build-fakejni,build-javah">
        <exec executable="gcc" dir="test/c">
            <arg value="-framework"/>
            <arg value="CoreFoundation"/>
            <arg value="-framework"/>
            <arg value="Security"/>
            <arg value="-I"/>
            <arg value="/System/Library/Frameworks/JavaVM.framework/Versions/Current/Headers"/>
            <arg value="-std=c99"/>
            <arg value="-pedantic"/>
            <arg value="-Wall"/>
            <arg value="-o"/>
            <arg value="test"/>
            <arg value="test.c"/>
            <arg value="fakejni.o"/>
        </exec>
    </target>
    <target name="test-c-build-fakejni">
        <exec executable="gcc" dir="test/c">
            <arg value="-std=c99"/>
            <arg value="-pedantic"/>
            <arg value="-Wall"/>
            <arg value="-c"/>
            <arg value="-o"/>
            <arg value="fakejni.o"/>
            <arg value="fakejni.c"/>
        </exec>
    </target>

    <target name="test-java" depends="test-java-no-junit,test-java-junit">
    </target>

    <target name="test-java-no-junit" unless="junit.jar">
        <echo message="You didn't pass a value for junit.jar. Skipping JUnit tests."/>
    </target>

    <target name="test-java-junit" if="junit.jar">
        <antcall target="dist"/>
        <antcall target="test-java-junit-build"/>
        <junit printsummary="yes" haltonfailure="yes">
            <classpath>
                <pathelement location="lib"/>
                <pathelement location="${junit.jar}"/>
            </classpath>

            <batchtest todir="lib">
                <fileset dir="test/java">
                    <include name="**/*Test.java"/>
                </fileset>
            </batchtest>
        </junit>
    </target>
    <target name="test-java-junit-build">
        <javac destdir="lib" includeantruntime="false" debug="true" classpath="${junit.jar}">
            <src path="test/java"/>
        </javac>
    </target>
</project>
